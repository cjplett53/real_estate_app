syntax = "proto3";

package realestate;

// Import for Timestamp
import "google/protobuf/timestamp.proto";

// Existing Property messages
message Property {
  string property_id = 1;
  string property_name = 2;
  string property_type = 3;     // "buy", "rent", or "sell"
  string property_info = 4;
  string price_lease_rent = 5;  // We store numbers as string over gRPC (converted in grpc_server.py)
  string location = 6;
  string image_path = 7;
  string agent_id = 8;
}

message ListPropertiesRequest {}
message ListPropertiesResponse {
  repeated Property properties = 1;
}

message GetPropertyRequest {
  string property_id = 1;
}
message GetPropertyResponse {
  Property property = 1;
}

message CreatePropertyRequest {
  Property property = 1;
}
message CreatePropertyResponse {
  bool success = 1;
  string message = 2;
}

// Existing Agent messages
message Agent {
  string agent_id = 1;
  string agent_name = 2;
  string agent_info = 3;
  string agent_contact_info = 4;
  string agent_image_path = 5;
}

message ListAgentsRequest {}
message ListAgentsResponse {
  repeated Agent agents = 1;
}

message GetAgentRequest {
  string agent_id = 1;
}
message GetAgentResponse {
  Agent agent = 1;
}

message CreateAgentRequest {
  Agent agent = 1;
}
message CreateAgentResponse {
  bool success = 1;
  string message = 2;
}

// Existing User messages
message addUserRequest {
  string username = 1;
  string password = 2;
}
message addUserResponse {
  string status_message = 1;
  string username = 2;
  string password = 3;
}
message getUserRequest {
  string username = 1;
  string password = 2;
}
message getUserResponse {
  string status_message = 1;
  string username = 2;
  string password = 3;
  repeated string chatMessage = 4; 
}



message ChatInfo {
  string chat_id = 1;
  repeated string participants = 2;
}

// Request/Response for listing all chats for a user
message ListUserChatsRequest {
  string username = 1;
}
message ListUserChatsResponse {
  repeated ChatInfo chats = 1;
}

// Individual chat message with Firestore timestamp
message ChatMessage {
  string sender = 1;
  string text = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// Request/Response for listing messages in a chat
message ListChatMessagesRequest {
  string chat_id = 1;
}
message ListChatMessagesResponse {
  repeated ChatMessage messages = 1;
}

// Request/Response for sending a new message to a chat
message SendMessageRequest {
  string chat_id = 1;
  ChatMessage message = 2;
}
message SendMessageResponse {
  bool success = 1;
  string error_message = 2;
}


service RealEstateService {

  // Properties
  rpc ListProperties (ListPropertiesRequest) returns (ListPropertiesResponse);
  rpc GetProperty (GetPropertyRequest) returns (GetPropertyResponse);
  rpc CreateProperty (CreatePropertyRequest) returns (CreatePropertyResponse);

  // Agents
  rpc ListAgents (ListAgentsRequest) returns (ListAgentsResponse);
  rpc GetAgent (GetAgentRequest) returns (GetAgentResponse);
  rpc CreateAgent (CreateAgentRequest) returns (CreateAgentResponse);

  // Users
  rpc addUser(addUserRequest) returns (addUserResponse);
  rpc getUser(getUserRequest) returns (getUserResponse);

  // NEW Chat RPC methods
  rpc ListUserChats(ListUserChatsRequest) returns (ListUserChatsResponse);
  rpc ListChatMessages(ListChatMessagesRequest) returns (ListChatMessagesResponse);
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
}
